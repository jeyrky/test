-- 🔧 Tối ưu FPS + Tắt hiệu ứng Pet

local Lighting = game:GetService("Lighting")
local Terrain = workspace:FindFirstChildOfClass("Terrain")
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserSettings = UserSettings():GetService("UserGameSettings")
local VirtualInput = game:GetService("VirtualInputManager")

local lp = Players.LocalPlayer
local char = lp.Character or lp.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")
local humanoid = char:WaitForChild("Humanoid")

-- Tắt GUI mặc định
pcall(function()
    game:GetService("StarterGui"):SetCoreGuiEnabled(Enum.CoreGuiType.All, false)
end)

-- ⚙️ Tắt ánh sáng
Lighting.GlobalShadows = false
Lighting.FogEnd = 1000000
Lighting.Brightness = 0
Lighting.OutdoorAmbient = Color3.fromRGB(128, 128, 128)

-- ⚙️ Terrain
if Terrain then
    Terrain.WaterWaveSize = 0
    Terrain.WaterWaveSpeed = 0
    Terrain.WaterReflectance = 0
    Terrain.WaterTransparency = 1
end

-- ⚙️ Tắt hiệu ứng toàn map
local function removeEffects(obj)
    for _, v in pairs(obj:GetDescendants()) do
        if v:IsA("ParticleEmitter") or v:IsA("Trail") or v:IsA("Smoke") or v:IsA("Fire") then
            v.Enabled = false
        elseif v:IsA("PointLight") or v:IsA("SpotLight") or v:IsA("SurfaceLight") then
            v.Enabled = false
        elseif v:IsA("Decal") then
            v.Transparency = 1
        elseif v:IsA("Texture") then
            v:Destroy()
        end
    end
end

removeEffects(workspace)

-- ⚙️ Auto tắt hiệu ứng khi có obj mới
workspace.DescendantAdded:Connect(function(obj)
    task.wait(0.1)
    pcall(function()
        if obj:IsA("Texture") then obj:Destroy()
        elseif obj:IsA("Decal") then obj.Transparency = 1
        elseif obj:IsA("ParticleEmitter") or obj:IsA("Trail") or obj:IsA("Smoke") or obj:IsA("Fire") or obj:IsA("PointLight") then
            obj.Enabled = false
        end
    end)
end)

-- ⚙️ Chất lượng thấp nhất
pcall(function()
    UserSettings.SavedQualityLevel = Enum.SavedQualitySetting.QualityLevel1
end)

-- ⚙️ Khi nhân vật spawn
lp.CharacterAdded:Connect(function(char)
    removeEffects(char)
end)

-- ===========================
-- 🚀 Auto ăn PET "Secret" / "Brainrot God"
-- ===========================

local holdTime = 3
local restTime = 0.7
local followDistance = 1
local checkInterval = 5

local allowedKeywords = { "Brainrot God", "Secret" }
local lastPet = nil

-- Gắn sẵn vùng quét
local startPos = Vector3.new(-410.32, -6.50, 255.72)
local endPos = Vector3.new(-411.93, -6.50, -137.21)
local autoRunning = true

local function isAllowedPet(name)
    for _, word in ipairs(allowedKeywords) do
        if string.lower(name):find(string.lower(word)) then
            return true
        end
    end
    return false
end

local function isInZone(pos)
    if not startPos or not endPos then return false end
    local minX, maxX = math.min(startPos.X, endPos.X), math.max(startPos.X, endPos.X)
    local minZ, maxZ = math.min(startPos.Z, endPos.Z), math.max(startPos.Z, endPos.Z)
    return pos.X >= minX and pos.X <= maxX and pos.Z >= minZ and pos.Z <= maxZ
end

local function findClosestPet()
    local nearest, nearestDist = nil, math.huge
    for _, label in ipairs(workspace:GetDescendants()) do
        if label:IsA("TextLabel") then
            local name = label.Text
            if isAllowedPet(name) then
                local model = label:FindFirstAncestorOfClass("Model")
                local root = model and model:FindFirstChildWhichIsA("BasePart")
                if model and root and model:IsDescendantOf(workspace) and isInZone(root.Position) then
                    local dist = (hrp.Position - root.Position).Magnitude
                    if dist < nearestDist then
                        nearest = { model = model, root = root, name = name }
                        nearestDist = dist
                    end
                end
            end
        end
    end

    return nearest
end

local function pressE(seconds)
    VirtualInput:SendKeyEvent(true, Enum.KeyCode.E, false, game)
    wait(seconds)
    VirtualInput:SendKeyEvent(false, Enum.KeyCode.E, false, game)
end

local function holdEOnPet(pet)
    if not pet or not pet.root or not pet.model then return end

    local moveStart = tick()
    while tick() - moveStart < 5 do
        if not pet.model:IsDescendantOf(workspace) or not isInZone(pet.root.Position) then return end
        local dist = (hrp.Position - pet.root.Position).Magnitude
        if dist <= followDistance then break end
        humanoid:MoveTo(Vector3.new(pet.root.Position.X, hrp.Position.Y, pet.root.Position.Z))
        wait(0.1)
    end

    local followConn
    followConn = RunService.RenderStepped:Connect(function()
        if not pet.model:IsDescendantOf(workspace) or not isInZone(pet.root.Position) then
            followConn:Disconnect()
            return
        end
        local dist = (hrp.Position - pet.root.Position).Magnitude
        if dist > followDistance then
            humanoid:MoveTo(Vector3.new(pet.root.Position.X, hrp.Position.Y, pet.root.Position.Z))
        else
            humanoid:MoveTo(hrp.Position)
        end
    end)

    while true do
        if not pet.model:IsDescendantOf(workspace) or not isInZone(pet.root.Position) then break end
        pressE(holdTime)
        wait(restTime)
    end

    if followConn then followConn:Disconnect() end
end

-- Vòng tìm PET tự động
task.spawn(function()
    while true do
        wait(checkInterval)
        if autoRunning then
            local pet = findClosestPet()
            if pet and (not lastPet or pet.model ~= lastPet.model) then
                lastPet = pet
                holdEOnPet(pet)
            elseif not pet then
                lastPet = nil
            end
        end
    end
end)

-- 🚶 Auto đi qua lại giữa 2 điểm (chạy xa mượt, không bị đứng giữa đường)
local function autoWalkBetweenPoints()
    local function moveTo(pos)
        local stepSize = 20
        local currentPos = hrp.Position

        while (currentPos - pos).Magnitude > 3 do
            if not autoRunning then break end

            local direction = (pos - currentPos).Unit
            local nextPos = currentPos + direction * math.min(stepSize, (pos - currentPos).Magnitude)

            humanoid:MoveTo(Vector3.new(nextPos.X, hrp.Position.Y, nextPos.Z))

            local startTick = tick()
            while (hrp.Position - nextPos).Magnitude > 3 and tick() - startTick < 2 do
                wait(0.1)
            end

            currentPos = hrp.Position
        end
    end

    task.spawn(function()
        while true do
            if autoRunning then
                wait(1)
                moveTo(endPos)
                wait(1)
                moveTo(startPos)
            else
                wait(1)
            end
        end
    end)
end

autoWalkBetweenPoints()
